mode=${MODE:xmlToJson}
xmlOuterNode=${XML_OUTER_NODE:}
inputKafkaTopic=${INPUT_KAFKA_TOPIC:incoming.op.msgs}
outputKafkaTopic=${OUTPUT_KAFKA_TOPIC:modify.op.msgs}

quarkus.kafka-streams.bootstrap-servers=${KAFKA_BROKERS}
quarkus.kafka-streams.application-id=${APP_NAME:quarkusXmlJsonConverter}
quarkus.kafka-streams.topics=${INPUT_KAFKA_TOPIC},${OUTPUT_KAFKA_TOPIC}

quarkus.jaeger.service-name=${APP_NAME:quarkusXmlJsonConverter}
quarkus.jaeger.local.service-name=${APP_NAME:quarkusXmlJsonConverter}
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.propagation=jaeger,b3
#quarkus.jaeger.endpoint=http://jaeger:14268/api/traces
zipkin.endpoint=${ZIPKIN_ENDPOINT: }

# pass-through options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
kafka-streams.auto.register.schemas=false
kafka-streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
kafka-streams.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
kafka-streams.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#kafka-streams.allow.auto.create.topics=${ALLOW_AUTO_CREATE_TOPICS:false}
#kafka-streams.request.timeout.ms=${REQUEST_TIMEOUT_MS:120000}
